import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import { FaShoppingCart, FaUserCircle, FaBars, FaTimes } from 'react-icons/fa';

export default function SubscriptionsPage() {
    const router = useRouter();
    const [plan, setPlan] = useState(null);
    const [loading, setLoading] = useState(true);
    const [upgrading, setUpgrading] = useState(false);
    const [error, setError] = useState('');
    const [menuOpen, setMenuOpen] = useState(false);

    useEffect(() => {
        const token = localStorage.getItem('token');
        if (!token) {
            router.push('/login');
            return;
        }

        fetch('https://vencera.tech/qunarBack/subscriptions', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
            .then(res => res.json())
            .then(data => {
                setPlan(data.plan || 'free');
            })
            .catch(() => setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏'))
            .finally(() => setLoading(false));
    }, []);

    const handleUpgrade = async () => {
        setUpgrading(true);
        setError('');
        try {
            const token = localStorage.getItem('token');
            const res = await fetch('https://vencera.tech/qunarBack/subscriptions/upgrade', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ plan: 'pro' })
            });

            if (!res.ok) {
                const err = await res.json();
                throw new Error(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ Pro');
            }

            const data = await res.json();
            window.location.href = data.url;
        } catch (err) {
            setError(err.message);
        } finally {
            setUpgrading(false);
        }
    };

    return (
        <div className="flex flex-col min-h-screen bg-gray-100">
            {/* –•–µ–¥–µ—Ä */}
            <header className="fixed top-0 w-full  bg-green-700 text-white shadow-lg z-20">
                <div className="max-w-7xl mx-auto px-6 py-4 flex items-center justify-between">
                    <Link href="/" className="flex items-center gap-2">
                        <img src="/qunar-logo-circle.png" alt="QUNAR.AI" className="h-10 w-auto" />
                        <span className="text-2xl font-extrabold">QUNAR</span>
                    </Link>
                    <nav className="hidden md:flex gap-8 font-semibold">
                        <Link href="/" className="hover:text-green-300 transition">–ì–ª–∞–≤–Ω–∞—è</Link>
                        <Link href="/product" className="hover:text-green-300 transition">Qunar –ú–∞—Ä–∫–µ—Ç</Link>
                        <Link href="/about" className="hover:text-green-300 transition">–û –Ω–∞—Å</Link>
                        <Link href="/ai" className="hover:text-green-300 transition">Qunar AI</Link>
                    </nav>
                    <div className="hidden md:flex items-center gap-6">
                        <Link href="/busket" className="hover:text-green-300 transition">
                            <FaShoppingCart size={24} />
                        </Link>
                        <Link href="/account" className="hover:text-green-300 transition">
                            <FaUserCircle size={24} />
                        </Link>
                    </div>
                    <button className="md:hidden p-2 hover:bg-green-700 rounded-full transition" onClick={() => setMenuOpen(prev => !prev)}>
                        {menuOpen ? <FaTimes size={24} /> : <FaBars size={24} />}
                    </button>
                </div>
                {menuOpen && (
                    <div className="md:hidden bg-[#196F3D] bg-opacity-95 backdrop-blur-sm px-6 py-4 space-y-3">
                        <Link href="/" onClick={() => setMenuOpen(false)} className="block text-white py-2 hover:text-green-200 transition">–ì–ª–∞–≤–Ω–∞—è</Link>
                        <Link href="/product" onClick={() => setMenuOpen(false)} className="block text-white py-2 hover:text-green-200 transition">–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å</Link>
                        <Link href="/about" onClick={() => setMenuOpen(false)} className="block text-white py-2 hover:text-green-200 transition">–û –Ω–∞—Å</Link>
                        <Link href="/subscriptions" onClick={() => setMenuOpen(false)} className="block text-white py-2 hover:text-green-200 transition">–ü–æ–¥–ø–∏—Å–∫–∞</Link>
                        <Link href="/busket" onClick={() => setMenuOpen(false)} className="block text-white py-2 hover:text-green-200 transition">–ö–æ—Ä–∑–∏–Ω–∞</Link>
                        <Link href="/account" onClick={() => setMenuOpen(false)} className="block text-white py-2 hover:text-green-200 transition">–ê–∫–∫–∞—É–Ω—Ç</Link>
                    </div>
                )}
            </header>

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
            <main className="flex flex-1 items-center justify-center px-4 pt-32 pb-16 bg-gray-100">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-10 max-w-6xl w-full">
                    {/* –ë–ª–æ–∫ Basic */}
                    <div className="bg-white p-8 rounded-2xl shadow-xl border-t-4 border-green-400">
                        <h3 className="text-2xl font-bold text-gray-800 mb-4">Basic (–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞)</h3>
                        <ul className="list-disc list-inside text-gray-700 space-y-2">
                            <li>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É–¥–æ–±—Ä–µ–Ω–∏–π Qunar</li>
                            <li>–ß–∞—Ç-–±–æ—Ç –Ω–∞ –±–∞–∑–µ –ò–ò</li>
                            <li>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å "–≤—Å—ë –¥–ª—è –∑–µ–º–ª–µ–¥–µ–ª–∏—è"</li>
                            <li>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å "–≤—Å—ë –¥–ª—è –¥–æ–º–∞"</li>
                        </ul>
                        <p className="mt-6 text-gray-600 text-sm">–¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω: {plan === 'free' ? '–ê–∫—Ç–∏–≤–µ–Ω üí°' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</p>
                    </div>

                    {/* –ë–ª–æ–∫ Pro */}
                    <div className="bg-white p-8 rounded-2xl shadow-xl border-t-4 border-yellow-500 flex flex-col justify-between">
                        <div>
                            <h3 className="text-2xl font-bold text-gray-800 mb-4">Pro ‚Äî 7990 ‚Ç∏ <span className="line-through text-sm text-gray-400 ml-2">8990 ‚Ç∏</span></h3>
                            <p className="mb-4 text-sm text-gray-600">–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏:</p>
                            <ul className="list-disc list-inside text-gray-700 space-y-2">
                                <li>–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø–æ–ª–µ</li>
                                <li>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –º–∏–Ω–µ—Ä–∞–ª–∞–º</li>
                                <li>–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ—á–≤—ã –∏ —Å–æ–≤–µ—Ç—ã</li>
                            </ul>
                        </div>
                        {plan === 'pro' ? (
                            <p className="text-center text-green-700 font-semibold text-lg mt-6">–í—ã —É–∂–µ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å PRO ‚úÖ</p>
                        ) : (
                            <button
                                onClick={handleUpgrade}
                                disabled={upgrading}
                                className={`mt-6 w-full bg-green-500 hover:bg-green-600 text-white font-bold py-3 rounded-full transition ${upgrading ? 'opacity-50 cursor-not-allowed' : ''}`}
                            >
                                {upgrading ? '–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ PRO...' : '–ö—É–ø–∏—Ç—å PRO –ø–æ–¥–ø–∏—Å–∫—É'}
                            </button>
                        )}
                    </div>
                </div>
            </main>


            {/* –§—É—Ç–µ—Ä */}
            <footer className=" bg-green-700 text-white py-4 text-center">
                &copy; {new Date().getFullYear()} QUNAR.AI. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </footer>
        </div>
    );
}
